package ba.actis.repositories;

import java.util.List;

import javax.transaction.Transactional;

import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;
import org.springframework.stereotype.Repository;

import ba.actis.models.Document;
import ba.actis.models.User;

@Repository
@Transactional
public interface DocumentRepository extends CrudRepository<Document, Long> {
	@Query("select d from Document d where id=?")
	public Document findById( Long id);
	
	@Query("select d from Document d where user_id=?")
	public List<Document> findAllByUserId( Long id);
	
	@Query("select d from Document d where user_id=? and review is not NULL")
	public List<Document> findUserReviewed( Long id);
	
	@Query("select d from Document d where reviewer_id is NULL or review is NULL")
	public List<Document> findDocsForReview();
	
	@Query("select d from Document d where reviewer_id=? and d.review IS NULL")
	public List<Document> findReviewerDocs(Long id);
	
	@Modifying(clearAutomatically = true)
	@Query("update Document d set reviewer_id=? where d.id=?")
	public Integer setReviewer(User reviewer, Long id);

	@Modifying(clearAutomatically = true)
	@Query("update Document d set reviewer_id=NULL where d.id=?")
	public Integer resetReviewer(Long id);
	
	@Modifying(clearAutomatically = true)
	@Query("update Document d set d.review=? where d.id=?")
	public Integer setReview(String review, Long id);
	
	@Query("select d from Document d where review is not NULL")
	public List<Document> findReviewedDocs();
	
	@Modifying(clearAutomatically = true)
	@Query("update Document d set is_approved=1 where d.id=?")
	public Integer approveDoc(Long id);
	
	@Query("select d from Document d where reviewer_id=? and d.review IS NULL and is_approved=1")
	public List<Document> findAcceptedReviewerDocs(Long id);
	
	findAcceptedReviewerDocs(id);
}
